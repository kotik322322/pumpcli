import { sendLocalCreateTx } from './launcher.js';
import { startMonitor, subscribeToToken } from './monitorServer.js';
// import { sellTokens } from './sellTokens.js';
// import { sellAllViaJito } from './sellViaJito.js';
import dotenv from 'dotenv';
dotenv.config();



(async () => {
    await startMonitor();
    console.log('üü¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω. –ñ–¥—ë–º —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞...');

    const tokenAddress = await sendLocalCreateTx();
    if (!tokenAddress) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞');
        process.exit(1);
    }

    console.log('‚úÖ –¢–æ–∫–µ–Ω —Å–æ–∑–¥–∞–Ω:', tokenAddress);
    subscribeToToken(tokenAddress);

    //   console.log('\n‚è≥ –ù–∞–∂–º–∏ [s] —á—Ç–æ–±—ã –ø—Ä–æ–¥–∞—Ç—å —Ç–æ–∫–µ–Ω—ã, [j] ‚Äî —á–µ—Ä–µ–∑ Jito, [q] ‚Äî –≤—ã—Ö–æ–¥');

    //   process.stdin.setRawMode(true);
    //   process.stdin.resume();
    //   process.stdin.on('data', async (key) => {
    //     const pressed = key.toString();

    //     if (pressed === 's') {
    //       console.log('üí∏ –ü—Ä–æ–¥–∞—ë–º —Ç–æ–∫–µ–Ω—ã –æ–±—ã—á–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º...');
    //       await sellTokens(walletPublicKey, walletPrivateKey, tokenAddress);
    //       process.exit();
    //     } else if (pressed === 'j') {
    //       console.log('‚ö° –ü—Ä–æ–¥–∞—ë–º —Ç–æ–∫–µ–Ω—ã —á–µ—Ä–µ–∑ Jito...');
    //       await sellAllViaJito(walletPrivateKey, tokenAddress);
    //       process.exit();
    //     } else if (pressed === 'q' || pressed === '\u0003') {
    //       console.log('üëã –í—ã—Ö–æ–¥...');
    //       process.exit();
    //     }
    //   });
})();